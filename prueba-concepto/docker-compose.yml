networks:
  pulsar:
    driver: bridge
services:
# Start zookeeper
  zookeeper:
    image: apachepulsar/pulsar:latest
    # profiles: ["pulsar"]
    container_name: zookeeper
    restart: on-failure
    networks:
      - pulsar
    volumes:
      - ./data/zookeeper:/pulsar/data/zookeeper
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
    command: >
      bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && \
             bin/generate-zookeeper-config.sh conf/zookeeper.conf && \
             exec bin/pulsar zookeeper"
    healthcheck:
      test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
      interval: 10s
      timeout: 5s
      retries: 30

# Init cluster metadata
  pulsar-init:
    container_name: pulsar-init
    hostname: pulsar-init
    image: apachepulsar/pulsar:latest
    # profiles: ["pulsar"]
    networks:
      - pulsar
    command: bin/pulsar initialize-cluster-metadata --cluster cluster-a --zookeeper zookeeper:2181 --configuration-store zookeeper:2181 --web-service-url http://broker:8080 --broker-service-url pulsar://broker:6650
    depends_on:
      zookeeper:
        condition: service_healthy

# Start bookie
  bookie:
    image: apachepulsar/pulsar:latest
    # profiles: ["pulsar"]
    container_name: bookie
    restart: on-failure
    networks:
      - pulsar
    environment:
      - clusterName=cluster-a
      - zkServers=zookeeper:2181
      - metadataServiceUri=metadata-store:zk:zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
      pulsar-init:
        condition: service_completed_successfully
  # Map the local directory to the container to avoid bookie startup failure due to insufficient container disks.
    volumes:
      - ./data/bookkeeper:/pulsar/data/bookkeeper
    command: bash -c "bin/apply-config-from-env.py conf/bookkeeper.conf
      && exec bin/pulsar bookie"

# Start broker
  broker:
    image: apachepulsar/pulsar:latest
    # profiles: ["pulsar"]
    container_name: broker
    hostname: broker
    restart: on-failure
    networks:
      - pulsar
    environment:
      - metadataStoreUrl=zk:zookeeper:2181
      - zookeeperServers=zookeeper:2181
      - clusterName=cluster-a
      - managedLedgerDefaultEnsembleSize=1
      - managedLedgerDefaultWriteQuorum=1
      - managedLedgerDefaultAckQuorum=1
      - advertisedAddress=broker
      - advertisedListeners=external:pulsar://127.0.0.1:6650
    depends_on:
      zookeeper:
        condition: service_healthy
      bookie:
        condition: service_started
    ports:
      - "6650:6650"
      - "8080:8080"
    volumes:
      - ./connectors/pulsar:/pulsar/connectors
    command: bash -c "bin/apply-config-from-env.py conf/broker.conf
      &&  exec bin/pulsar broker"
  
  # Postgres
  db:
    image: postgres:latest
    hostname: postgresdb
    container_name: postgresdb
    environment:
      - POSTGRES_USER=sta_user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=sta_db
    networks:
      - pulsar
    ports:
      - "5432:5433"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
  # Servicios de AeroAlpes
  imagenes_medicas:
    container_name: imagenes_medicas
    hostname: imagenes_medicas
    build:
      context: .
      dockerfile: imagenes.Dockerfile
    environment:
      - DATABASE_URL=postgresql://sta_user:password@postgresdb/sta_db
      - PULSAR_ADDRESS=broker
    networks:
      - pulsar
    depends_on:
      - broker
      - db
    ports:
      - "5000:5000"

  anonimizar_imagenes:
    container_name: anonimizar_imagenes
    hostname: anonimizar_imagenes
    build:
      context: .
      dockerfile: anonimizar.Dockerfile
    environment:
      - DATABASE_URL=postgresql://sta_user:password@postgresdb/sta_db
      - PULSAR_ADDRESS=broker
    networks:
      - pulsar
    depends_on:
      - broker
      - db
    ports:
      - "5001:5001"
  
  monetizacion_imagenes:
    container_name: monetizacion_imagenes
    hostname: monetizacion_imagenes
    build:
      context: .
      dockerfile: monetizacion.Dockerfile
    environment:
      - DATABASE_URL=postgresql://sta_user:password@postgresdb/sta_db
      - PULSAR_ADDRESS=broker
    networks:
      - pulsar
    depends_on:
      - broker
      - db
    ports:
      - "5002:5002"

  gestion_usuarios:
    container_name: gestion_usuarios
    hostname: gestion_usuarios
    build:
      context: .
      dockerfile: usuarios.Dockerfile
    environment:
      - DATABASE_URL=postgresql://sta_user:password@postgresdb/sta_db
      - PULSAR_ADDRESS=broker
    networks:
      - pulsar
    depends_on:
      - broker
      - db
    ports:
      - "5003:5003"
